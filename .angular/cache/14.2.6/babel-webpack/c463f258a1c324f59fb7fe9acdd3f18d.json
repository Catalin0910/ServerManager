{"ast":null,"code":"import { BehaviorSubject, of } from 'rxjs';\nimport { catchError, map, startWith } from 'rxjs/operators';\nimport { DataState } from './enum/data-state.enum';\nimport { Status } from './enum/status.enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./service/server.service\";\nimport * as i2 from \"./service/notification.service\";\nimport * as i3 from \"@angular/common\";\n\nfunction AppComponent_ng_container_17_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 35);\n    i0.ɵɵelement(2, \"div\", 36);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction AppComponent_ng_container_17_ng_container_2_tbody_20_i_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"i\", 46);\n    i0.ɵɵtext(1, \"\\uE328\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AppComponent_ng_container_17_ng_container_2_tbody_20_i_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 47);\n  }\n}\n\nconst _c0 = function (a0) {\n  return [a0];\n};\n\nfunction AppComponent_ng_container_17_ng_container_2_tbody_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tbody\")(1, \"tr\")(2, \"td\");\n    i0.ɵɵelement(3, \"img\", 39);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\")(13, \"span\", 40);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"td\")(16, \"a\", 41);\n    i0.ɵɵlistener(\"click\", function AppComponent_ng_container_17_ng_container_2_tbody_20_Template_a_click_16_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r15);\n      const server_r10 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r14.pingServer(server_r10.ipAddress));\n    });\n    i0.ɵɵtemplate(17, AppComponent_ng_container_17_ng_container_2_tbody_20_i_17_Template, 2, 0, \"i\", 42);\n    i0.ɵɵpipe(18, \"async\");\n    i0.ɵɵpipe(19, \"async\");\n    i0.ɵɵtemplate(20, AppComponent_ng_container_17_ng_container_2_tbody_20_i_20_Template, 1, 0, \"i\", 43);\n    i0.ɵɵpipe(21, \"async\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(22, \"td\")(23, \"a\", 44);\n    i0.ɵɵlistener(\"click\", function AppComponent_ng_container_17_ng_container_2_tbody_20_Template_a_click_23_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r15);\n      const server_r10 = restoredCtx.$implicit;\n      const ctx_r16 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r16.deleteServer(server_r10));\n    });\n    i0.ɵɵelementStart(24, \"i\", 45);\n    i0.ɵɵtext(25, \"\\uE872\");\n    i0.ɵɵelementEnd()()()()();\n  }\n\n  if (rf & 2) {\n    const server_r10 = ctx.$implicit;\n    const ctx_r9 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"src\", server_r10.imgUrl, i0.ɵɵsanitizeUrl)(\"alt\", server_r10.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(server_r10.ipAddress);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(server_r10.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(server_r10.memory);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(server_r10.type);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(16, _c0, server_r10.status === ctx_r9.Status.SERVER_UP ? \" badge-success\" : \" badge-danger\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", server_r10.status === ctx_r9.Status.SERVER_UP ? \"SERVER UP\" : \"SERVER DOWN\", \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(18, 10, ctx_r9.filterStatus$) === \"\" || i0.ɵɵpipeBind1(19, 12, ctx_r9.filterStatus$) !== server_r10.ipAddress);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(21, 14, ctx_r9.filterStatus$) === server_r10.ipAddress);\n  }\n}\n\nfunction AppComponent_ng_container_17_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"table\", 37)(2, \"thead\")(3, \"tr\")(4, \"th\");\n    i0.ɵɵtext(5, \"Image\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\");\n    i0.ɵɵtext(7, \"IP Address\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\");\n    i0.ɵɵtext(9, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\");\n    i0.ɵɵtext(11, \"Memory\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"th\");\n    i0.ɵɵtext(13, \"Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"th\");\n    i0.ɵɵtext(15, \"Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"th\");\n    i0.ɵɵtext(17, \"Ping\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"th\");\n    i0.ɵɵtext(19, \"Actions\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(20, AppComponent_ng_container_17_ng_container_2_tbody_20_Template, 26, 18, \"tbody\", 38);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const appState_r5 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵadvance(20);\n    i0.ɵɵproperty(\"ngForOf\", appState_r5.appData.data.servers);\n  }\n}\n\nfunction AppComponent_ng_container_17_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 48);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const appState_r5 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", appState_r5.error, \" \");\n  }\n}\n\nfunction AppComponent_ng_container_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 33);\n    i0.ɵɵtemplate(1, AppComponent_ng_container_17_ng_container_1_Template, 3, 0, \"ng-container\", 34);\n    i0.ɵɵtemplate(2, AppComponent_ng_container_17_ng_container_2_Template, 21, 1, \"ng-container\", 34);\n    i0.ɵɵtemplate(3, AppComponent_ng_container_17_ng_container_3_Template, 3, 1, \"ng-container\", 34);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const appState_r5 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngSwitch\", appState_r5.dataState);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r0.DataState.LOADING_STATE);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r0.DataState.LOADED_STATE);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r0.DataState.ERROR_STATE);\n  }\n}\n\nfunction AppComponent_i_62_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 49);\n  }\n}\n\nfunction AppComponent_span_64_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Saving...\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AppComponent_span_66_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Add\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class AppComponent {\n  constructor(serverService, notifier) {\n    this.serverService = serverService;\n    this.notifier = notifier;\n    this.DataState = DataState;\n    this.Status = Status;\n    this.filterSubject = new BehaviorSubject('');\n    this.dataSubject = new BehaviorSubject(null);\n    this.filterStatus$ = this.filterSubject.asObservable();\n    this.isLoading = new BehaviorSubject(false);\n    this.isLoading$ = this.isLoading.asObservable();\n  }\n\n  ngOnInit() {\n    this.appState$ = this.serverService.servers$.pipe(map(response => {\n      this.notifier.onDefault(response.message);\n      this.dataSubject.next(response);\n      return {\n        dataState: DataState.LOADED_STATE,\n        appData: { ...response,\n          data: {\n            servers: response.data.servers.reverse()\n          }\n        }\n      };\n    }), startWith({\n      dataState: DataState.LOADING_STATE\n    }), catchError(error => {\n      this.notifier.onError(error);\n      return of({\n        dataState: DataState.ERROR_STATE,\n        error\n      });\n    }));\n  }\n\n  pingServer(ipAddress) {\n    this.filterSubject.next(ipAddress);\n    this.appState$ = this.serverService.ping$(ipAddress).pipe(map(response => {\n      const index = this.dataSubject.value.data.servers.findIndex(server => server.id === response.data.server.id);\n      this.dataSubject.value.data.servers[index] = response.data.server;\n      this.notifier.onDefault(response.message);\n      this.filterSubject.next('');\n      return {\n        dataState: DataState.LOADED_STATE,\n        appData: this.dataSubject.value\n      };\n    }), startWith({\n      dataState: DataState.LOADED_STATE,\n      appData: this.dataSubject.value\n    }), catchError(error => {\n      this.filterSubject.next('');\n      this.notifier.onError(error);\n      return of({\n        dataState: DataState.ERROR_STATE,\n        error\n      });\n    }));\n  }\n\n  saveServer(serverForm) {\n    this.isLoading.next(true);\n    this.appState$ = this.serverService.save$(serverForm.value).pipe(map(response => {\n      this.dataSubject.next({ ...response,\n        data: {\n          servers: [response.data.server, ...this.dataSubject.value.data.servers]\n        }\n      });\n      this.notifier.onDefault(response.message);\n      document.getElementById('closeModal').click();\n      this.isLoading.next(false);\n      serverForm.resetForm({\n        status: this.Status.SERVER_DOWN\n      });\n      return {\n        dataState: DataState.LOADED_STATE,\n        appData: this.dataSubject.value\n      };\n    }), startWith({\n      dataState: DataState.LOADED_STATE,\n      appData: this.dataSubject.value\n    }), catchError(error => {\n      this.isLoading.next(false);\n      this.notifier.onError(error);\n      return of({\n        dataState: DataState.ERROR_STATE,\n        error\n      });\n    }));\n  }\n\n  filterServers(status) {\n    this.appState$ = this.serverService.filter$(status, this.dataSubject.value).pipe(map(response => {\n      this.notifier.onDefault(response.message);\n      return {\n        dataState: DataState.LOADED_STATE,\n        appData: response\n      };\n    }), startWith({\n      dataState: DataState.LOADED_STATE,\n      appData: this.dataSubject.value\n    }), catchError(error => {\n      this.notifier.onError(error);\n      return of({\n        dataState: DataState.ERROR_STATE,\n        error\n      });\n    }));\n  }\n\n  deleteServer(server) {\n    this.appState$ = this.serverService.delete$(server.id).pipe(map(response => {\n      this.dataSubject.next({ ...response,\n        data: {\n          servers: this.dataSubject.value.data.servers.filter(s => s.id !== server.id)\n        }\n      });\n      this.notifier.onDefault(response.message);\n      return {\n        dataState: DataState.LOADED_STATE,\n        appData: this.dataSubject.value\n      };\n    }), startWith({\n      dataState: DataState.LOADED_STATE,\n      appData: this.dataSubject.value\n    }), catchError(error => {\n      this.notifier.onError(error);\n      return of({\n        dataState: DataState.ERROR_STATE,\n        error\n      });\n    }));\n  }\n\n  printReport() {\n    this.notifier.onDefault('Report downloaded'); // window.print();\n\n    let dataType = 'application/vnd.ms-excel.sheet.macroEnabled.12';\n    let tableSelect = document.getElementById('servers');\n    let tableHtml = tableSelect.outerHTML.replace(/ /g, '%20');\n    let downloadLink = document.createElement('a');\n    document.body.appendChild(downloadLink);\n    downloadLink.href = 'data:' + dataType + ', ' + tableHtml;\n    downloadLink.download = 'server-report.xls';\n    downloadLink.click();\n    document.body.removeChild(downloadLink);\n  }\n\n}\n\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.ServerService), i0.ɵɵdirectiveInject(i2.NotificationService));\n};\n\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 69,\n  vars: 15,\n  consts: [[1, \"container-xl\"], [1, \"table-responsive\"], [1, \"table-wrapper\"], [1, \"table-title\"], [1, \"row\"], [1, \"col-sm-6\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"href\", \"#addEmployeeModal\", \"data-toggle\", \"modal\", 1, \"btn\", \"btn-success\"], [1, \"material-icons\"], [3, \"ngSwitch\", 4, \"ngIf\"], [\"id\", \"addEmployeeModal\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [3, \"ngSubmit\"], [\"serverForm\", \"ngForm\"], [1, \"modal-header\"], [1, \"modal-title\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-hidden\", \"true\", 1, \"close\"], [1, \"modal-body\"], [1, \"form-group\"], [\"type\", \"text\", \"ngModel\", \"\", \"name\", \"ipAddress\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"ngModel\", \"\", \"name\", \"name\", \"required\", \"\", 1, \"form-control\"], [1, \"col-xl-6\", \"col-lg-6\", \"col-md-6\", \"col-sm-6\", \"col-6\"], [\"type\", \"text\", \"ngModel\", \"\", \"name\", \"memory\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"ngModel\", \"\", \"name\", \"type\", \"required\", \"\", 1, \"form-control\"], [\"name\", \"status\", \"ngModel\", \"SERVER_DOWN\", \"name\", \"status\", \"required\", \"\", 1, \"form-control\"], [\"value\", \"SERVER_UP\"], [\"value\", \"SERVER_DOWN\"], [1, \"modal-footer\"], [\"type\", \"button\", \"id\", \"closeModal\", \"data-dismiss\", \"modal\", 1, \"btn\", \"btn-warning\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"], [\"class\", \"fas fa-spinner fa-spin\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [1, \"col-md-12\", \"single-note-item\", \"text-center\"], [\"role\", \"status\", 1, \"spinner-border\", \"text-info\"], [\"id\", \"servers\", 1, \"table\", \"table-striped\", \"table-hover\"], [4, \"ngFor\", \"ngForOf\"], [\"width\", \"40\", \"height\", \"40\", 3, \"src\", \"alt\"], [1, \"badge\", 3, \"ngClass\"], [2, \"cursor\", \"pointer\", 3, \"click\"], [\"class\", \"material-icons\", \"title\", \"Ping server\", 4, \"ngIf\"], [\"class\", \"fa fa-spinner fa-spin\", \"style\", \"font-size:24px\", 4, \"ngIf\"], [\"data-toggle\", \"modal\", 1, \"delete\", 2, \"cursor\", \"pointer\", 3, \"click\"], [\"data-toggle\", \"tooltip\", \"title\", \"Delete\", 1, \"material-icons\"], [\"title\", \"Ping server\", 1, \"material-icons\"], [1, \"fa\", \"fa-spinner\", \"fa-spin\", 2, \"font-size\", \"24px\"], [1, \"alert-danger\"], [1, \"fas\", \"fa-spinner\", \"fa-spin\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r19 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h2\");\n      i0.ɵɵtext(7, \"Manage Servers\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 5)(9, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_9_listener() {\n        return ctx.printReport();\n      });\n      i0.ɵɵtext(10, \"Print Report\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"a\", 7)(12, \"i\", 8);\n      i0.ɵɵtext(13, \"\\uE147\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"span\");\n      i0.ɵɵtext(15, \"New Server\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelement(16, \"br\");\n      i0.ɵɵtemplate(17, AppComponent_ng_container_17_Template, 4, 4, \"ng-container\", 9);\n      i0.ɵɵpipe(18, \"async\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"div\", 10)(20, \"div\", 11)(21, \"div\", 12)(22, \"form\", 13, 14);\n      i0.ɵɵlistener(\"ngSubmit\", function AppComponent_Template_form_ngSubmit_22_listener() {\n        i0.ɵɵrestoreView(_r19);\n\n        const _r1 = i0.ɵɵreference(23);\n\n        return i0.ɵɵresetView(ctx.saveServer(_r1));\n      });\n      i0.ɵɵelementStart(24, \"div\", 15)(25, \"h4\", 16);\n      i0.ɵɵtext(26, \"Add Server\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"button\", 17);\n      i0.ɵɵtext(28, \"\\u00D7\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(29, \"div\", 18)(30, \"div\", 19)(31, \"label\");\n      i0.ɵɵtext(32, \"IP\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(33, \"input\", 20);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"div\", 19)(35, \"label\");\n      i0.ɵɵtext(36, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(37, \"input\", 21);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"div\", 4)(39, \"div\", 22)(40, \"div\", 19)(41, \"label\");\n      i0.ɵɵtext(42, \"Memory\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(43, \"input\", 23);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(44, \"div\", 22)(45, \"div\", 19)(46, \"label\");\n      i0.ɵɵtext(47, \"Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(48, \"input\", 24);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(49, \"div\", 19)(50, \"label\");\n      i0.ɵɵtext(51, \"Status\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(52, \"select\", 25)(53, \"option\", 26);\n      i0.ɵɵtext(54, \"SERVER UP\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(55, \"option\", 27);\n      i0.ɵɵtext(56, \"SERVER DOWN\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(57, \"div\", 28)(58, \"button\", 29);\n      i0.ɵɵtext(59, \" Cancel \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(60, \"button\", 30);\n      i0.ɵɵpipe(61, \"async\");\n      i0.ɵɵtemplate(62, AppComponent_i_62_Template, 1, 0, \"i\", 31);\n      i0.ɵɵpipe(63, \"async\");\n      i0.ɵɵtemplate(64, AppComponent_span_64_Template, 2, 0, \"span\", 32);\n      i0.ɵɵpipe(65, \"async\");\n      i0.ɵɵtemplate(66, AppComponent_span_66_Template, 2, 0, \"span\", 32);\n      i0.ɵɵpipe(67, \"async\");\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelement(68, \"notifier-container\");\n    }\n\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(23);\n\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(18, 5, ctx.appState$));\n      i0.ɵɵadvance(43);\n      i0.ɵɵproperty(\"disabled\", _r1.invalid || i0.ɵɵpipeBind1(61, 7, ctx.isLoading$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(63, 9, ctx.isLoading$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(65, 11, ctx.isLoading$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !i0.ɵɵpipeBind1(67, 13, ctx.isLoading$));\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i3.NgSwitch, i3.NgSwitchCase, i3.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */\"],\n  changeDetection: 0\n});","map":{"version":3,"mappings":"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","names":["BehaviorSubject","of","catchError","map","startWith","DataState","Status","i0","server_r10","AppComponent","constructor","serverService","notifier","filterSubject","asObservable","isLoading","ngOnInit","appState$","servers$","pipe","response","onDefault","message","dataSubject","next","dataState","LOADED_STATE","appData","data","servers","reverse","LOADING_STATE","error","onError","ERROR_STATE","pingServer","ipAddress","ping$","index","value","findIndex","server","id","saveServer","serverForm","save$","document","getElementById","click","resetForm","status","SERVER_DOWN","filterServers","filter$","deleteServer","delete$","filter","s","printReport","dataType","tableSelect","tableHtml","outerHTML","replace","downloadLink","createElement","body","appendChild","href","download","removeChild","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Catalin Cebuc\\Downloads\\serverapp\\src\\app\\app.component.ts","C:\\Users\\Catalin Cebuc\\Downloads\\serverapp\\src\\app\\app.component.html"],"sourcesContent":["import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { catchError, map, startWith } from 'rxjs/operators';\nimport { DataState } from './enum/data-state.enum';\nimport { Status } from './enum/status.enum';\nimport { AppState } from './interface/app-state';\nimport { CustomResponse } from './interface/custom-response';\nimport { Server } from './interface/server';\nimport { NotificationService } from \"./service/notification.service\";\nimport { ServerService } from './service/server.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent implements OnInit {\n  appState$: Observable<AppState<CustomResponse>>;\n  readonly DataState = DataState;\n  readonly Status = Status;\n  private filterSubject = new BehaviorSubject<string>('');\n  private dataSubject = new BehaviorSubject<CustomResponse>(null);\n  filterStatus$ = this.filterSubject.asObservable();\n  private isLoading = new BehaviorSubject<boolean>(false);\n  isLoading$ = this.isLoading.asObservable();\n\n\n  constructor(private serverService: ServerService, private notifier: NotificationService) { }\n\n  ngOnInit(): void {\n    this.appState$ = this.serverService.servers$\n      .pipe(\n        map(response => {\n          this.notifier.onDefault(response.message);\n          this.dataSubject.next(response);\n          return { dataState: DataState.LOADED_STATE, appData: { ...response, data: { servers: response.data.servers.reverse() } } }\n        }),\n        startWith({ dataState: DataState.LOADING_STATE }),\n        catchError((error: string) => {\n          this.notifier.onError(error);\n          return of({ dataState: DataState.ERROR_STATE, error });\n        })\n      );\n  }\n\n  pingServer(ipAddress: string): void {\n    this.filterSubject.next(ipAddress);\n    this.appState$ = this.serverService.ping$(ipAddress)\n      .pipe(\n        map(response => {\n          const index = this.dataSubject.value.data.servers.findIndex(server =>  server.id === response.data.server.id);\n          this.dataSubject.value.data.servers[index] = response.data.server;\n          this.notifier.onDefault(response.message);\n          this.filterSubject.next('');\n          return { dataState: DataState.LOADED_STATE, appData: this.dataSubject.value }\n        }),\n        startWith({ dataState: DataState.LOADED_STATE, appData: this.dataSubject.value }),\n        catchError((error: string) => {\n          this.filterSubject.next('');\n          this.notifier.onError(error);\n          return of({ dataState: DataState.ERROR_STATE, error });\n        })\n      );\n  }\n\n  saveServer(serverForm: NgForm): void {\n    this.isLoading.next(true);\n    this.appState$ = this.serverService.save$(serverForm.value as Server)\n      .pipe(\n        map(response => {\n          this.dataSubject.next(\n            {...response, data: { servers: [response.data.server, ...this.dataSubject.value.data.servers] } }\n          );\n          this.notifier.onDefault(response.message);\n          document.getElementById('closeModal').click();\n          this.isLoading.next(false);\n          serverForm.resetForm({ status: this.Status.SERVER_DOWN });\n          return { dataState: DataState.LOADED_STATE, appData: this.dataSubject.value }\n        }),\n        startWith({ dataState: DataState.LOADED_STATE, appData: this.dataSubject.value }),\n        catchError((error: string) => {\n          this.isLoading.next(false);\n          this.notifier.onError(error);\n          return of({ dataState: DataState.ERROR_STATE, error });\n        })\n      );\n}\n\n  filterServers(status: Status): void {\n    this.appState$ = this.serverService.filter$(status, this.dataSubject.value)\n      .pipe(\n        map(response => {\n          this.notifier.onDefault(response.message);\n          return { dataState: DataState.LOADED_STATE, appData: response };\n        }),\n        startWith({ dataState: DataState.LOADED_STATE, appData: this.dataSubject.value }),\n        catchError((error: string) => {\n          this.notifier.onError(error);\n          return of({ dataState: DataState.ERROR_STATE, error });\n        })\n      );\n  }\n\n  deleteServer(server: Server): void {\n    this.appState$ = this.serverService.delete$(server.id)\n      .pipe(\n        map(response => {\n          this.dataSubject.next(\n            { ...response, data: \n              { servers: this.dataSubject.value.data.servers.filter(s => s.id !== server.id)} }\n          );\n          this.notifier.onDefault(response.message);\n          return { dataState: DataState.LOADED_STATE, appData: this.dataSubject.value }\n        }),\n        startWith({ dataState: DataState.LOADED_STATE, appData: this.dataSubject.value }),\n        catchError((error: string) => {\n          this.notifier.onError(error);\n          return of({ dataState: DataState.ERROR_STATE, error });\n        })\n      );\n  }\n\n  printReport(): void {\n    this.notifier.onDefault('Report downloaded');\n    // window.print();\n    let dataType = 'application/vnd.ms-excel.sheet.macroEnabled.12';\n    let tableSelect = document.getElementById('servers');\n    let tableHtml = tableSelect.outerHTML.replace(/ /g, '%20');\n    let downloadLink = document.createElement('a');\n    document.body.appendChild(downloadLink);\n    downloadLink.href = 'data:' + dataType + ', ' + tableHtml;\n    downloadLink.download = 'server-report.xls';\n    downloadLink.click();\n    document.body.removeChild(downloadLink);\n  }\n}","<div class=\"container-xl\">\n  <div class=\"table-responsive\">\n      <div class=\"table-wrapper\">\n          <div class=\"table-title\">\n              <div class=\"row\">\n                  <div class=\"col-sm-6\">\n                      <h2>Manage Servers</h2>\n                  </div>\n                  <div class=\"col-sm-6\">\n                      <button (click)=\"printReport()\" type=\"button\" class=\"btn btn-primary\">Print Report</button>\n\n                      <a href=\"#addEmployeeModal\" class=\"btn btn-success\" data-toggle=\"modal\">\n                          <i class=\"material-icons\">&#xE147;</i>\n                          <span>New Server</span>\n                      </a>\n\n                      <!-- <span>\n                          <select (ngModelChange)=\"filterServers($event)\" name=\"status\" ngModel=\"ALL\"  \n                              class=\"btn btn-info\" style=\"height: 32.91px;\">\n                              <option value=\"ALL\">ALL</option>\n                              <option value=\"SERVER_UP\">SERVER UP</option>\n                              <option value=\"SERVER_DOWN\">SERVER DOWN</option>\n                          </select>\n                      </span> -->\n                  </div>\n              </div>\n          </div> <br>\n          <ng-container *ngIf=\"(appState$ | async) as appState\" [ngSwitch]=\"appState.dataState\">\n              <ng-container *ngSwitchCase=\"DataState.LOADING_STATE\">\n                  <div class=\"col-md-12 single-note-item text-center\">\n                      <div class=\"spinner-border text-info\" role=\"status\"></div>\n                  </div>\n              </ng-container>\n              <ng-container *ngSwitchCase=\"DataState.LOADED_STATE\">\n                  <table class=\"table table-striped table-hover\" id=\"servers\">\n                      <thead>\n                          <tr>\n                              <th>Image</th>\n                              <th>IP Address</th>\n                              <th>Name</th>\n                              <th>Memory</th>\n                              <th>Type</th>\n                              <th>Status</th>\n                              <th>Ping</th>\n                              <th>Actions</th>\n                          </tr>\n                      </thead>\n                      <tbody *ngFor=\"let server of appState.appData.data.servers; let i = index\" >\n                          <tr>\n                              <td> <img [src]=\"server.imgUrl\" [alt]=\"server.name\" width=\"40\" height=\"40\"></td>\n                              <td>{{ server.ipAddress }}</td>\n                              <td>{{ server.name }}</td>\n                              <td>{{ server.memory }}</td>\n                              <td>{{ server.type }}</td>\n                              <td>\n                                  <span class=\"badge\" \n                                  [ngClass]=\"[server.status === Status.SERVER_UP ? ' badge-success' : ' badge-danger']\">\n                                    {{ server.status === Status.SERVER_UP ? 'SERVER UP' : 'SERVER DOWN' }}\n                                  </span>\n                              </td>\n                              <td>\n                                  <a (click)=\"pingServer(server.ipAddress)\" style=\"cursor: pointer;\">\n                                      <i *ngIf=\"(filterStatus$ | async) === '' || (filterStatus$ | async) !== server.ipAddress\"\n                                          class=\"material-icons\" title=\"Ping server\">&#xe328;</i>\n                                      <i *ngIf=\"(filterStatus$ | async) === server.ipAddress\"\n                                          class=\"fa fa-spinner fa-spin\" style=\"font-size:24px\"></i>\n                                  </a>\n                              </td>\n                              <td>\n                                  <a (click)=\"deleteServer(server)\" class=\"delete\" data-toggle=\"modal\"\n                                      style=\"cursor: pointer;\"><i class=\"material-icons\" data-toggle=\"tooltip\"\n                                          title=\"Delete\">&#xE872;</i></a>\n                              </td>\n                      </tbody>\n                  </table>\n              </ng-container>\n              <ng-container *ngSwitchCase=\"DataState.ERROR_STATE\">\n                  <div class=\"alert-danger\">\n                      {{ appState.error }}\n                  </div>\n              </ng-container>\n          </ng-container>\n      </div>\n  </div>\n</div>\n\n<!-- Add server Modal HTML -->\n<div id=\"addEmployeeModal\" class=\"modal fade\">\n  <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n          <form #serverForm=\"ngForm\" (ngSubmit)=\"saveServer(serverForm)\">\n              <div class=\"modal-header\">\n                  <h4 class=\"modal-title\">Add Server</h4>\n                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">&times;</button>\n              </div>\n              <div class=\"modal-body\">\n                  <div class=\"form-group\">\n                      <label>IP</label>\n                      <input type=\"text\" ngModel name=\"ipAddress\" class=\"form-control\" required>\n                  </div>\n                  <div class=\"form-group\">\n                      <label>Name</label>\n                      <input type=\"text\" ngModel name=\"name\" class=\"form-control\" required>\n                  </div>\n                  <div class=\"row\">\n                      <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6\">\n                          <div class=\"form-group\">\n                              <label>Memory</label>\n                              <input type=\"text\" ngModel name=\"memory\" class=\"form-control\" required>\n                          </div>\n                      </div>\n                      <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6\">\n                          <div class=\"form-group\">\n                              <label>Type</label>\n                              <input type=\"text\" ngModel name=\"type\" class=\"form-control\" required>\n                          </div>\n                      </div>\n                  </div>\n                  <div class=\"form-group\">\n                      <label>Status</label>\n                      <select name=\"status\" ngModel=\"SERVER_DOWN\" class=\"form-control\" name=\"status\" required>\n                          <option value=\"SERVER_UP\">SERVER UP</option>\n                          <option value=\"SERVER_DOWN\">SERVER DOWN</option>\n                      </select>\n                  </div>\n              </div>\n              <div class=\"modal-footer\">\n                  <button type=\"button\" class=\"btn btn-warning\" id=\"closeModal\" data-dismiss=\"modal\">\n                      Cancel\n                  </button>\n                  <button type=\"submit\" [disabled]=\"serverForm.invalid || (isLoading$ | async)\"\n                      class=\"btn btn-success\">\n                      <i *ngIf=\"isLoading$ | async\" class=\"fas fa-spinner fa-spin\"></i>\n                      <span *ngIf=\"isLoading$ | async\">Saving...</span>\n                      <span *ngIf=\"!(isLoading$ | async)\">Add</span>\n                  </button>\n              </div>\n          </form>\n      </div>\n  </div>\n</div>\n<notifier-container></notifier-container>"]},"metadata":{},"sourceType":"module"}