{"ast":null,"code":"import { catchError, map, of, startWith } from 'rxjs';\nimport { DataState } from './enum/data-state.enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./service/server.service\";\nimport * as i2 from \"@angular/common\";\n\nfunction AppComponent_ng_container_25_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 37);\n    i0.ɵɵelement(2, \"div\", 38);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction AppComponent_ng_container_25_ng_container_2_tbody_20_i_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"i\", 48);\n    i0.ɵɵtext(1, \"\\uE328\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AppComponent_ng_container_25_ng_container_2_tbody_20_i_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 49);\n  }\n}\n\nconst _c0 = function (a0) {\n  return [a0];\n};\n\nfunction AppComponent_ng_container_25_ng_container_2_tbody_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tbody\")(1, \"tr\")(2, \"td\");\n    i0.ɵɵelement(3, \"img\", 41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\")(13, \"span\", 42);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"td\")(16, \"a\", 43);\n    i0.ɵɵlistener(\"click\", function AppComponent_ng_container_25_ng_container_2_tbody_20_Template_a_click_16_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r15);\n      const server_r10 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r14.pingServer(server_r10.ipAddress));\n    });\n    i0.ɵɵtemplate(17, AppComponent_ng_container_25_ng_container_2_tbody_20_i_17_Template, 2, 0, \"i\", 44);\n    i0.ɵɵpipe(18, \"async\");\n    i0.ɵɵpipe(19, \"async\");\n    i0.ɵɵtemplate(20, AppComponent_ng_container_25_ng_container_2_tbody_20_i_20_Template, 1, 0, \"i\", 45);\n    i0.ɵɵpipe(21, \"async\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(22, \"td\")(23, \"a\", 46);\n    i0.ɵɵlistener(\"click\", function AppComponent_ng_container_25_ng_container_2_tbody_20_Template_a_click_23_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r15);\n      const server_r10 = restoredCtx.$implicit;\n      const ctx_r16 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r16.deleteServer(server_r10));\n    });\n    i0.ɵɵelementStart(24, \"i\", 47);\n    i0.ɵɵtext(25, \"\\uE872\");\n    i0.ɵɵelementEnd()()()()();\n  }\n\n  if (rf & 2) {\n    const server_r10 = ctx.$implicit;\n    const ctx_r9 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"src\", server_r10.imageUrl, i0.ɵɵsanitizeUrl)(\"alt\", server_r10.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(server_r10.ipAddress);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(server_r10.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(server_r10.memory);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(server_r10.type);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(16, _c0, server_r10.status === ctx_r9.Status.SERVER_UP ? \" badge-success\" : \" badge-danger\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", server_r10.status === ctx_r9.Status.SERVER_UP ? \"SERVER UP\" : \"SERVER DOWN\", \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(18, 10, ctx_r9.filterStatus$) === \"\" || i0.ɵɵpipeBind1(19, 12, ctx_r9.filterStatus$) !== server_r10.ipAddress);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(21, 14, ctx_r9.filterStatus$) === server_r10.ipAddress);\n  }\n}\n\nfunction AppComponent_ng_container_25_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"table\", 39)(2, \"thead\")(3, \"tr\")(4, \"th\");\n    i0.ɵɵtext(5, \"Image\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\");\n    i0.ɵɵtext(7, \"IP Address\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\");\n    i0.ɵɵtext(9, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\");\n    i0.ɵɵtext(11, \"Memory\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"th\");\n    i0.ɵɵtext(13, \"Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"th\");\n    i0.ɵɵtext(15, \"Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"th\");\n    i0.ɵɵtext(17, \"Ping\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"th\");\n    i0.ɵɵtext(19, \"Actions\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(20, AppComponent_ng_container_25_ng_container_2_tbody_20_Template, 26, 18, \"tbody\", 40);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const appState_r5 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵadvance(20);\n    i0.ɵɵproperty(\"ngForOf\", appState_r5.appData.data.servers);\n  }\n}\n\nfunction AppComponent_ng_container_25_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 50);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const appState_r5 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", appState_r5.error, \" \");\n  }\n}\n\nfunction AppComponent_ng_container_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 35);\n    i0.ɵɵtemplate(1, AppComponent_ng_container_25_ng_container_1_Template, 3, 0, \"ng-container\", 36);\n    i0.ɵɵtemplate(2, AppComponent_ng_container_25_ng_container_2_Template, 21, 1, \"ng-container\", 36);\n    i0.ɵɵtemplate(3, AppComponent_ng_container_25_ng_container_3_Template, 3, 1, \"ng-container\", 36);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const appState_r5 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngSwitch\", appState_r5.dataState);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r0.DataState.LOADING_STATE);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r0.DataState.LOADED_STATE);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r0.DataState.ERROR_STATE);\n  }\n}\n\nfunction AppComponent_i_70_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 51);\n  }\n}\n\nfunction AppComponent_span_72_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Saving...\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AppComponent_span_74_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Add\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class AppComponent {\n  constructor(serverSerivice) {\n    this.serverSerivice = serverSerivice;\n  }\n\n  ngOnInit() {\n    this.appState$ = this.serverSerivice.servers$.pipe(map(response => {\n      return {\n        dataState: DataState.LOADED_STATE,\n        appData: response\n      };\n    }), startWith({\n      dataState: DataState.LOADING_STATE\n    }), catchError(error => {\n      return of({\n        dataState: DataState.ERROR_STATE,\n        error: error\n      });\n    }));\n  }\n\n}\n\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.ServerService));\n};\n\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 77,\n  vars: 15,\n  consts: [[1, \"container-xl\"], [1, \"table-responsive\"], [1, \"table-wrapper\"], [1, \"table-title\"], [1, \"row\"], [1, \"col-sm-6\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"href\", \"#addEmployeeModal\", \"data-toggle\", \"modal\", 1, \"btn\", \"btn-success\"], [1, \"material-icons\"], [\"name\", \"status\", \"ngModel\", \"ALL\", 1, \"btn\", \"btn-info\", 2, \"height\", \"32.91px\", 3, \"ngModelChange\"], [\"value\", \"ALL\"], [\"value\", \"SERVER_UP\"], [\"value\", \"SERVER_DOWN\"], [3, \"ngSwitch\", 4, \"ngIf\"], [\"id\", \"addEmployeeModal\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [3, \"ngSubmit\"], [\"serverForm\", \"ngForm\"], [1, \"modal-header\"], [1, \"modal-title\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-hidden\", \"true\", 1, \"close\"], [1, \"modal-body\"], [1, \"form-group\"], [\"type\", \"text\", \"ngModel\", \"\", \"name\", \"ipAddress\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"ngModel\", \"\", \"name\", \"name\", \"required\", \"\", 1, \"form-control\"], [1, \"col-xl-6\", \"col-lg-6\", \"col-md-6\", \"col-sm-6\", \"col-6\"], [\"type\", \"text\", \"ngModel\", \"\", \"name\", \"memory\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"ngModel\", \"\", \"name\", \"type\", \"required\", \"\", 1, \"form-control\"], [\"name\", \"status\", \"ngModel\", \"SERVER_DOWN\", \"name\", \"status\", \"required\", \"\", 1, \"form-control\"], [1, \"modal-footer\"], [\"type\", \"button\", \"id\", \"closeModal\", \"data-dismiss\", \"modal\", 1, \"btn\", \"btn-warning\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"], [\"class\", \"fas fa-spinner fa-spin\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [1, \"col-md-12\", \"single-note-item\", \"text-center\"], [\"role\", \"status\", 1, \"spinner-border\", \"text-info\"], [\"id\", \"servers\", 1, \"table\", \"table-striped\", \"table-hover\"], [4, \"ngFor\", \"ngForOf\"], [\"width\", \"40\", \"height\", \"40\", 3, \"src\", \"alt\"], [1, \"badge\", 3, \"ngClass\"], [2, \"cursor\", \"pointer\", 3, \"click\"], [\"class\", \"material-icons\", \"title\", \"Ping server\", 4, \"ngIf\"], [\"class\", \"fa fa-spinner fa-spin\", \"style\", \"font-size:24px\", 4, \"ngIf\"], [\"data-toggle\", \"modal\", 1, \"delete\", 2, \"cursor\", \"pointer\", 3, \"click\"], [\"data-toggle\", \"tooltip\", \"title\", \"Delete\", 1, \"material-icons\"], [\"title\", \"Ping server\", 1, \"material-icons\"], [1, \"fa\", \"fa-spinner\", \"fa-spin\", 2, \"font-size\", \"24px\"], [1, \"alert-danger\"], [1, \"fas\", \"fa-spinner\", \"fa-spin\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r19 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h2\");\n      i0.ɵɵtext(7, \"Manage Servers\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 5)(9, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_9_listener() {\n        return ctx.printReport();\n      });\n      i0.ɵɵtext(10, \"Print Report\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"a\", 7)(12, \"i\", 8);\n      i0.ɵɵtext(13, \"\\uE147\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"span\");\n      i0.ɵɵtext(15, \"New Server\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"span\")(17, \"select\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_select_ngModelChange_17_listener($event) {\n        return ctx.filterServers($event);\n      });\n      i0.ɵɵelementStart(18, \"option\", 10);\n      i0.ɵɵtext(19, \"ALL\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"option\", 11);\n      i0.ɵɵtext(21, \"SERVER UP\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"option\", 12);\n      i0.ɵɵtext(23, \"SERVER DOWN\");\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelement(24, \"br\");\n      i0.ɵɵtemplate(25, AppComponent_ng_container_25_Template, 4, 4, \"ng-container\", 13);\n      i0.ɵɵpipe(26, \"async\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(27, \"div\", 14)(28, \"div\", 15)(29, \"div\", 16)(30, \"form\", 17, 18);\n      i0.ɵɵlistener(\"ngSubmit\", function AppComponent_Template_form_ngSubmit_30_listener() {\n        i0.ɵɵrestoreView(_r19);\n\n        const _r1 = i0.ɵɵreference(31);\n\n        return i0.ɵɵresetView(ctx.saveServer(_r1));\n      });\n      i0.ɵɵelementStart(32, \"div\", 19)(33, \"h4\", 20);\n      i0.ɵɵtext(34, \"Add Server\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"button\", 21);\n      i0.ɵɵtext(36, \"\\u00D7\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(37, \"div\", 22)(38, \"div\", 23)(39, \"label\");\n      i0.ɵɵtext(40, \"IP\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(41, \"input\", 24);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(42, \"div\", 23)(43, \"label\");\n      i0.ɵɵtext(44, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(45, \"input\", 25);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(46, \"div\", 4)(47, \"div\", 26)(48, \"div\", 23)(49, \"label\");\n      i0.ɵɵtext(50, \"Memory\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(51, \"input\", 27);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(52, \"div\", 26)(53, \"div\", 23)(54, \"label\");\n      i0.ɵɵtext(55, \"Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(56, \"input\", 28);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(57, \"div\", 23)(58, \"label\");\n      i0.ɵɵtext(59, \"Status\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(60, \"select\", 29)(61, \"option\", 11);\n      i0.ɵɵtext(62, \"SERVER UP\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(63, \"option\", 12);\n      i0.ɵɵtext(64, \"SERVER DOWN\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(65, \"div\", 30)(66, \"button\", 31);\n      i0.ɵɵtext(67, \" Cancel \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(68, \"button\", 32);\n      i0.ɵɵpipe(69, \"async\");\n      i0.ɵɵtemplate(70, AppComponent_i_70_Template, 1, 0, \"i\", 33);\n      i0.ɵɵpipe(71, \"async\");\n      i0.ɵɵtemplate(72, AppComponent_span_72_Template, 2, 0, \"span\", 34);\n      i0.ɵɵpipe(73, \"async\");\n      i0.ɵɵtemplate(74, AppComponent_span_74_Template, 2, 0, \"span\", 34);\n      i0.ɵɵpipe(75, \"async\");\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelement(76, \"notifier-container\");\n    }\n\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(31);\n\n      i0.ɵɵadvance(25);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(26, 5, ctx.appState$));\n      i0.ɵɵadvance(43);\n      i0.ɵɵproperty(\"disabled\", _r1.invalid || i0.ɵɵpipeBind1(69, 7, ctx.isLoading$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(71, 9, ctx.isLoading$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(73, 11, ctx.isLoading$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !i0.ɵɵpipeBind1(75, 13, ctx.isLoading$));\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i2.NgSwitch, i2.NgSwitchCase, i2.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["catchError","map","of","startWith","DataState","i0","server_r10","AppComponent","constructor","serverSerivice","ngOnInit","appState$","servers$","pipe","response","dataState","LOADED_STATE","appData","LOADING_STATE","error","ERROR_STATE","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Catalin Cebuc\\Downloads\\serverapp\\src\\app\\app.component.ts","C:\\Users\\Catalin Cebuc\\Downloads\\serverapp\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { catchError, map, Observable, of, startWith } from 'rxjs';\nimport { DataState } from './enum/data-state.enum';\nimport { AppState } from './interface/app-state';\nimport { CustomResponse } from './interface/custom-response';\nimport { ServerService } from './service/server.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  appState$: Observable<AppState<CustomResponse>>;\n  constructor(private serverSerivice: ServerService) { }\n\n  ngOnInit(): void {\n    this.appState$ = this.serverSerivice.servers$\n      .pipe(\n        map(response => {\n          return { dataState: DataState.LOADED_STATE, appData: response }\n        }),\n        startWith({ dataState: DataState.LOADING_STATE }),\n        catchError((error: string) => {\n          return of({ dataState: DataState.ERROR_STATE, error: error })\n        })\n      );\n  }\n}\n","<div class=\"container-xl\">\n  <div class=\"table-responsive\">\n      <div class=\"table-wrapper\">\n          <div class=\"table-title\">\n              <div class=\"row\">\n                  <div class=\"col-sm-6\">\n                      <h2>Manage Servers</h2>\n                  </div>\n                  <div class=\"col-sm-6\">\n                      <button (click)=\"printReport()\" type=\"button\" class=\"btn btn-primary\">Print Report</button>\n\n                      <a href=\"#addEmployeeModal\" class=\"btn btn-success\" data-toggle=\"modal\">\n                          <i class=\"material-icons\">&#xE147;</i>\n                          <span>New Server</span>\n                      </a>\n\n                      <span>\n                          <select (ngModelChange)=\"filterServers($event)\" name=\"status\" ngModel=\"ALL\"  \n                              class=\"btn btn-info\" style=\"height: 32.91px;\">\n                              <option value=\"ALL\">ALL</option>\n                              <option value=\"SERVER_UP\">SERVER UP</option>\n                              <option value=\"SERVER_DOWN\">SERVER DOWN</option>\n                          </select>\n                      </span>\n                  </div>\n              </div>\n          </div> <br>\n          <ng-container *ngIf=\"(appState$ | async) as appState\" [ngSwitch]=\"appState.dataState\">\n              <ng-container *ngSwitchCase=\"DataState.LOADING_STATE\">\n                  <div class=\"col-md-12 single-note-item text-center\">\n                      <div class=\"spinner-border text-info\" role=\"status\"></div>\n                  </div>\n              </ng-container>\n              <ng-container *ngSwitchCase=\"DataState.LOADED_STATE\">\n                  <table class=\"table table-striped table-hover\" id=\"servers\">\n                      <thead>\n                          <tr>\n                              <th>Image</th>\n                              <th>IP Address</th>\n                              <th>Name</th>\n                              <th>Memory</th>\n                              <th>Type</th>\n                              <th>Status</th>\n                              <th>Ping</th>\n                              <th>Actions</th>\n                          </tr>\n                      </thead>\n                      <tbody *ngFor=\"let server of appState.appData.data.servers; let i = index\" >\n                          <tr>\n                              <td> <img [src]=\"server.imageUrl\" [alt]=\"server.name\" width=\"40\" height=\"40\"></td>\n                              <td>{{ server.ipAddress }}</td>\n                              <td>{{ server.name }}</td>\n                              <td>{{ server.memory }}</td>\n                              <td>{{ server.type }}</td>\n                              <td>\n                                  <span class=\"badge\" \n                                  [ngClass]=\"[server.status === Status.SERVER_UP ? ' badge-success' : ' badge-danger']\">\n                                    {{ server.status === Status.SERVER_UP ? 'SERVER UP' : 'SERVER DOWN' }}\n                                  </span>\n                              </td>\n                              <td>\n                                  <a (click)=\"pingServer(server.ipAddress)\" style=\"cursor: pointer;\">\n                                      <i *ngIf=\"(filterStatus$ | async) === '' || (filterStatus$ | async) !== server.ipAddress\"\n                                          class=\"material-icons\" title=\"Ping server\">&#xe328;</i>\n                                      <i *ngIf=\"(filterStatus$ | async) === server.ipAddress\"\n                                          class=\"fa fa-spinner fa-spin\" style=\"font-size:24px\"></i>\n                                  </a>\n                              </td>\n                              <td>\n                                  <a (click)=\"deleteServer(server)\" class=\"delete\" data-toggle=\"modal\"\n                                      style=\"cursor: pointer;\"><i class=\"material-icons\" data-toggle=\"tooltip\"\n                                          title=\"Delete\">&#xE872;</i></a>\n                              </td>\n                      </tbody>\n                  </table>\n              </ng-container>\n              <ng-container *ngSwitchCase=\"DataState.ERROR_STATE\">\n                  <div class=\"alert-danger\">\n                      {{ appState.error }}\n                  </div>\n              </ng-container>\n          </ng-container>\n      </div>\n  </div>\n</div>\n\n<!-- Add server Modal HTML -->\n<div id=\"addEmployeeModal\" class=\"modal fade\">\n  <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n          <form #serverForm=\"ngForm\" (ngSubmit)=\"saveServer(serverForm)\">\n              <div class=\"modal-header\">\n                  <h4 class=\"modal-title\">Add Server</h4>\n                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">&times;</button>\n              </div>\n              <div class=\"modal-body\">\n                  <div class=\"form-group\">\n                      <label>IP</label>\n                      <input type=\"text\" ngModel name=\"ipAddress\" class=\"form-control\" required>\n                  </div>\n                  <div class=\"form-group\">\n                      <label>Name</label>\n                      <input type=\"text\" ngModel name=\"name\" class=\"form-control\" required>\n                  </div>\n                  <div class=\"row\">\n                      <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6\">\n                          <div class=\"form-group\">\n                              <label>Memory</label>\n                              <input type=\"text\" ngModel name=\"memory\" class=\"form-control\" required>\n                          </div>\n                      </div>\n                      <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6\">\n                          <div class=\"form-group\">\n                              <label>Type</label>\n                              <input type=\"text\" ngModel name=\"type\" class=\"form-control\" required>\n                          </div>\n                      </div>\n                  </div>\n                  <div class=\"form-group\">\n                      <label>Status</label>\n                      <select name=\"status\" ngModel=\"SERVER_DOWN\" class=\"form-control\" name=\"status\" required>\n                          <option value=\"SERVER_UP\">SERVER UP</option>\n                          <option value=\"SERVER_DOWN\">SERVER DOWN</option>\n                      </select>\n                  </div>\n              </div>\n              <div class=\"modal-footer\">\n                  <button type=\"button\" class=\"btn btn-warning\" id=\"closeModal\" data-dismiss=\"modal\">\n                      Cancel\n                  </button>\n                  <button type=\"submit\" [disabled]=\"serverForm.invalid || (isLoading$ | async)\"\n                      class=\"btn btn-success\">\n                      <i *ngIf=\"isLoading$ | async\" class=\"fas fa-spinner fa-spin\"></i>\n                      <span *ngIf=\"isLoading$ | async\">Saving...</span>\n                      <span *ngIf=\"!(isLoading$ | async)\">Add</span>\n                  </button>\n              </div>\n          </form>\n      </div>\n  </div>\n</div>\n<notifier-container></notifier-container>"]},"metadata":{},"sourceType":"module"}